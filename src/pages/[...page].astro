---
import BaseLayout from '../layouts/BaseLayout.astro'
import Card from '../components/Card.astro'
import { getCollection } from 'astro:content'
import configs from '../../.config/astropod.config.json'
import HeaderCard from '../components/headerCard/HeaderCard.astro'
import PlainTextRenderer from 'marked-plaintext'
import { marked } from 'marked'
import Pagination from '../components/pagination.astro'

const renderer = new PlainTextRenderer() as any

export async function getStaticPaths({ paginate }) {
    const products = await getCollection('products')
    products.sort(
        (a: any, b: any) =>
            b.data.publishedAt.valueOf() - a.data.publishedAt.valueOf()
    )
    return paginate(products, { pageSize: configs.pageSize })
}
const { page } = Astro.props as any
---

<BaseLayout>
    <HeaderCard title={configs.name} subtitle={configs.author} />

    <div class="card-grid mt-20">
        {
            page?.data?.map((products: any, index: any) => (
                <Card
                    title={products.data.name}
                    cover={products.data.cover}
                    slider={products.data.images}
                    desc={marked.parse(
                        products.data.description.slice(0, 500),
                        { renderer: renderer }
                    )}
                    url={'/' + products.slug}
                    pubDate={products.data.publishedAt}
                    id={'card-' + index}
                    price={products.data.price}
                />
            ))
        }
    </div>
    {(page.url.next || page.url.prev) && <Pagination page={page} slug="/" />}
</BaseLayout>

<style>
    .card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        justify-content: center;
        margin: 60px auto;
        justify-items: center;
        gap: 8px 4px;
    }

    @media only screen and (max-width: 576px) {
        .card-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit , minmax(280px, 1fr));
            justify-content: center;
            margin: 0 auto;
        }
    }

    @media only screen and (max-width: 576px) {
        .card-grid {
            display: grid;
            grid-template-columns: repeat(2, minmax(280px, 1fr));
            justify-content: center;
            margin: 0 auto;
        }
    }

    @media only screen and (max-width: 480px) {
        .card-grid {
            display: grid;
            grid-template-columns: repeat(2, minmax(236px, 1fr));
            justify-content: center;
            margin: 0 auto;
        }
    }
    @media only screen and (max-width: 440px) {
        .card-grid {
            display: grid;
            grid-template-columns: repeat(2, minmax(218px, 1fr));
            justify-content: center;
            margin: 0 auto;
        }
    }

    @media only screen and (max-width: 428px) {
        .card-grid {
            display: grid;
            grid-template-columns: repeat(2, minmax(205px, 1fr));
            justify-content: center;
            margin: 0 auto;
        }
    }

    @media only screen and (max-width: 414px) {
        .card-grid {
            display: grid;
            grid-template-columns: repeat(2, minmax(205px, 1fr));
            justify-content: center;
            margin: 0 auto;
        }
    }

    @media only screen and (max-width: 390px) {
        .card-grid {
            display: grid;
            grid-template-columns: repeat(4, minmax(195px, 1fr));
            justify-content: center;
            margin: 0 auto;
        }
    }

    @media only screen and (max-width: 375px) {
        .card-grid {
            display: grid;
            grid-template-columns: repeat(2, minmax(184px, 1fr));
            justify-content: center;
            margin: 0 auto;
        }
    }
</style>
